name: Build and Push Docker Image

on:
  push:
    branches:
      # - main
      - CI/CD
  pull_request:
    branches:
      # - main
      - CI/CD

env:
  # Credentials for dockerhub
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  # Credentials for AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # AWS region
  AWS_REGION: us-east-2
  # ECS-specific variables
  ECS_CLUSTER: apex
  ECS_SERVICE: apexappsvc
  ECS_TASK_DEFINITION: apexapptask
  CONTAINER_NAME: apexapp
  # # Environment variables for Docker Compose
  # PORT: ${{ secrets.PORT }}
  # DB_URL: ${{ secrets.DB_URL }}

jobs:
  build:
    name: "Build, Push, and Deploy Docker Image to ECS"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and tag Docker image using Docker Compose
      id: build
      run: |
        BUILD_NUMBER=${{ github.run_number }}
        docker-compose -f docker-compose.yaml build
        docker tag oluty/apexapp:latest ${{ env.DOCKER_HUB_USERNAME }}/apexapp:$BUILD_NUMBER
        docker tag oluty/apexapp:latest ${{ env.DOCKER_HUB_USERNAME }}/apexapp:latest
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

    - name: Push Docker image
      run: |
        docker push ${{ env.DOCKER_HUB_USERNAME }}/apexapp:${{ env.BUILD_NUMBER }}
        docker push ${{ env.DOCKER_HUB_USERNAME }}/apexapp:latest

    - name: Install AWS CLI
      run: |
        pip install --user awscli

    # - name: Register ECS Task Definition
    #   run: |
    #     aws ecs register-task-definition \
    #       --region ${{ env.AWS_REGION }} \
    #       --family ${{ env.ECS_TASK_DEFINITION }} \
    #       --container-definitions "[
    #         {
    #           \"name\": \"${{ env.CONTAINER_NAME }}\",
    #           \"image\": \"${{ env.DOCKER_HUB_USERNAME }}/apexapp:${{ env.BUILD_NUMBER }}\",
    #           \"essential\": true,
    #           \"memory\": 512,
    #           \"portMappings\": [
    #             {
    #               \"containerPort\": 3000,
    #               \"hostPort\": 3000
    #             }
    #           ]
    #         }
    #       ]"

    # - name: Update ECS Service with New Image
    #   run: |
    #     aws ecs update-service \
    #       --region ${{ env.AWS_REGION }} \
    #       --cluster ${{ env.ECS_CLUSTER }} \
    #       --service ${{ env.ECS_SERVICE }} \
    #       --force-new-deployment
    
    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --region ${{ env.AWS_REGION }} \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment
